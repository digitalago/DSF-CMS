<?php
/**
 * @file
 * Contains hooks for object module.
 */


/**
 * Implements hook_preprocess_node().
 */
function object_preprocess_node(&$variables) {
  if ($variables['node']->bundle() == 'object') {
    if ($variables['view_mode'] == 'full') {
      $variables['#attached']['library'][] = 'object/object';
    }
    $zoom = $variables['node']->field_is_zoom_allowed->getValue();
    if (isset($zoom[0]['value']) && $zoom[0]['value'] == 0) {
      $variables['attributes']['class'][] = 'no-zoom';
    }
  }
}

/**
 * Implements hook_preprocess_field().
 */
function object_preprocess_field(&$variables) {
  $fields = ['field_artist_maker' => ['artist_maker:', 'node'], 'field_object_name_reference' => ['object_name:', 'taxonomy_term'],];
  if (in_array($variables['field_name'], array_keys($fields))) {
    _link_to_facet($fields[$variables['field_name']][0], $fields[$variables['field_name']][1], $variables);
  }
}

/**
 * Helper function to link to facet.
 *
 * @param string $facet_name
 *    name of the facet link segment.
 *
 * @param array $variables
 *    variables array that needs to be updated.
 */
function _link_to_facet($facet_name, $type, &$variables) {
  $count = $variables['element']['#items']->count();
  for ($i = 0; $i < $count; $i++) {
    if (isset($variables['items'][$i]['content'])) {
      $entity = \Drupal::entityTypeManager()->getStorage($type)->load($variables['items'][$i]['content']['#plain_text']);
      if (isset($entity)) {
        if ($type == 'node') {
          $title = $entity->title->value;
        }
        else {
          $title = $entity->name->value;
        }
        $variables['items'][$i]['content']['#markup'] = '<a href="/collection/browse?f[0]=' . $facet_name . $variables['items'][$i]['content']['#plain_text'] . '">' . $title . '</a>';
        $variables['items'][$i]['content']['#type'] = 'markup';
        unset($variables['items'][$i]['content']['#plain_text']);
      }
    }
  }
}
